/*
 * This file is generated by jOOQ.
 */
package by.sf.bot.jooq.tables.records;


import by.sf.bot.jooq.tables.Users;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Таблица для хранения информации о пользователях
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record5<Integer, Long, String, LocalDate, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>contact_center_bot.users.user_id</code>. Уникальный
     * идентификатор пользователя
     */
    public UsersRecord setUserId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>contact_center_bot.users.user_id</code>. Уникальный
     * идентификатор пользователя
     */
    public Integer getUserId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>contact_center_bot.users.telegram_id</code>.
     * Идентификатор пользователя в Telegram
     */
    public UsersRecord setTelegramId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>contact_center_bot.users.telegram_id</code>.
     * Идентификатор пользователя в Telegram
     */
    public Long getTelegramId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>contact_center_bot.users.username</code>. Имя
     * пользователя в Telegram
     */
    public UsersRecord setUsername(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>contact_center_bot.users.username</code>. Имя
     * пользователя в Telegram
     */
    public String getUsername() {
        return (String) get(2);
    }

    /**
     * Setter for <code>contact_center_bot.users.date_created</code>. Дата
     * создания записи
     */
    public UsersRecord setDateCreated(LocalDate value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>contact_center_bot.users.date_created</code>. Дата
     * создания записи
     */
    public LocalDate getDateCreated() {
        return (LocalDate) get(3);
    }

    /**
     * Setter for <code>contact_center_bot.users.is_verified</code>.
     */
    public UsersRecord setIsVerified(Boolean value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>contact_center_bot.users.is_verified</code>.
     */
    public Boolean getIsVerified() {
        return (Boolean) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Long, String, LocalDate, Boolean> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, Long, String, LocalDate, Boolean> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Users.USERS.USER_ID;
    }

    @Override
    public Field<Long> field2() {
        return Users.USERS.TELEGRAM_ID;
    }

    @Override
    public Field<String> field3() {
        return Users.USERS.USERNAME;
    }

    @Override
    public Field<LocalDate> field4() {
        return Users.USERS.DATE_CREATED;
    }

    @Override
    public Field<Boolean> field5() {
        return Users.USERS.IS_VERIFIED;
    }

    @Override
    public Integer component1() {
        return getUserId();
    }

    @Override
    public Long component2() {
        return getTelegramId();
    }

    @Override
    public String component3() {
        return getUsername();
    }

    @Override
    public LocalDate component4() {
        return getDateCreated();
    }

    @Override
    public Boolean component5() {
        return getIsVerified();
    }

    @Override
    public Integer value1() {
        return getUserId();
    }

    @Override
    public Long value2() {
        return getTelegramId();
    }

    @Override
    public String value3() {
        return getUsername();
    }

    @Override
    public LocalDate value4() {
        return getDateCreated();
    }

    @Override
    public Boolean value5() {
        return getIsVerified();
    }

    @Override
    public UsersRecord value1(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public UsersRecord value2(Long value) {
        setTelegramId(value);
        return this;
    }

    @Override
    public UsersRecord value3(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public UsersRecord value4(LocalDate value) {
        setDateCreated(value);
        return this;
    }

    @Override
    public UsersRecord value5(Boolean value) {
        setIsVerified(value);
        return this;
    }

    @Override
    public UsersRecord values(Integer value1, Long value2, String value3, LocalDate value4, Boolean value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(Integer userId, Long telegramId, String username, LocalDate dateCreated, Boolean isVerified) {
        super(Users.USERS);

        setUserId(userId);
        setTelegramId(telegramId);
        setUsername(username);
        setDateCreated(dateCreated);
        setIsVerified(isVerified);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(by.sf.bot.jooq.tables.pojos.Users value) {
        super(Users.USERS);

        if (value != null) {
            setUserId(value.getUserId());
            setTelegramId(value.getTelegramId());
            setUsername(value.getUsername());
            setDateCreated(value.getDateCreated());
            setIsVerified(value.getIsVerified());
        }
    }
}
