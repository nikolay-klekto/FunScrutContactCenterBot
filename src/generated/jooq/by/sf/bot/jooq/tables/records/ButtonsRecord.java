/*
 * This file is generated by jOOQ.
 */
package by.sf.bot.jooq.tables.records;


import by.sf.bot.jooq.tables.Buttons;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Таблица для хранения информации о кнопках меню
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ButtonsRecord extends UpdatableRecordImpl<ButtonsRecord> implements Record7<Integer, Integer, String, String, String, LocalDate, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>contact_center_bot.buttons.button_id</code>. Уникальный
     * идентификатор кнопки
     */
    public ButtonsRecord setButtonId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>contact_center_bot.buttons.button_id</code>. Уникальный
     * идентификатор кнопки
     */
    public Integer getButtonId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>contact_center_bot.buttons.menu_id</code>. Идентификатор
     * меню, к которому относится кнопка
     */
    public ButtonsRecord setMenuId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>contact_center_bot.buttons.menu_id</code>. Идентификатор
     * меню, к которому относится кнопка
     */
    public Integer getMenuId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>contact_center_bot.buttons.label</code>. Надпись на
     * кнопке
     */
    public ButtonsRecord setLabel(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>contact_center_bot.buttons.label</code>. Надпись на
     * кнопке
     */
    public String getLabel() {
        return (String) get(2);
    }

    /**
     * Setter for <code>contact_center_bot.buttons.action_type</code>. Тип
     * действия кнопки (например, URL, команда)
     */
    public ButtonsRecord setActionType(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>contact_center_bot.buttons.action_type</code>. Тип
     * действия кнопки (например, URL, команда)
     */
    public String getActionType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>contact_center_bot.buttons.action_data</code>. Данные
     * действия кнопки (например, URL или текст команды)
     */
    public ButtonsRecord setActionData(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>contact_center_bot.buttons.action_data</code>. Данные
     * действия кнопки (например, URL или текст команды)
     */
    public String getActionData() {
        return (String) get(4);
    }

    /**
     * Setter for <code>contact_center_bot.buttons.date_created</code>. Дата
     * создания записи
     */
    public ButtonsRecord setDateCreated(LocalDate value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>contact_center_bot.buttons.date_created</code>. Дата
     * создания записи
     */
    public LocalDate getDateCreated() {
        return (LocalDate) get(5);
    }

    /**
     * Setter for <code>contact_center_bot.buttons.position</code>.
     */
    public ButtonsRecord setPosition(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>contact_center_bot.buttons.position</code>.
     */
    public Integer getPosition() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, Integer, String, String, String, LocalDate, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, Integer, String, String, String, LocalDate, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Buttons.BUTTONS.BUTTON_ID;
    }

    @Override
    public Field<Integer> field2() {
        return Buttons.BUTTONS.MENU_ID;
    }

    @Override
    public Field<String> field3() {
        return Buttons.BUTTONS.LABEL;
    }

    @Override
    public Field<String> field4() {
        return Buttons.BUTTONS.ACTION_TYPE;
    }

    @Override
    public Field<String> field5() {
        return Buttons.BUTTONS.ACTION_DATA;
    }

    @Override
    public Field<LocalDate> field6() {
        return Buttons.BUTTONS.DATE_CREATED;
    }

    @Override
    public Field<Integer> field7() {
        return Buttons.BUTTONS.POSITION;
    }

    @Override
    public Integer component1() {
        return getButtonId();
    }

    @Override
    public Integer component2() {
        return getMenuId();
    }

    @Override
    public String component3() {
        return getLabel();
    }

    @Override
    public String component4() {
        return getActionType();
    }

    @Override
    public String component5() {
        return getActionData();
    }

    @Override
    public LocalDate component6() {
        return getDateCreated();
    }

    @Override
    public Integer component7() {
        return getPosition();
    }

    @Override
    public Integer value1() {
        return getButtonId();
    }

    @Override
    public Integer value2() {
        return getMenuId();
    }

    @Override
    public String value3() {
        return getLabel();
    }

    @Override
    public String value4() {
        return getActionType();
    }

    @Override
    public String value5() {
        return getActionData();
    }

    @Override
    public LocalDate value6() {
        return getDateCreated();
    }

    @Override
    public Integer value7() {
        return getPosition();
    }

    @Override
    public ButtonsRecord value1(Integer value) {
        setButtonId(value);
        return this;
    }

    @Override
    public ButtonsRecord value2(Integer value) {
        setMenuId(value);
        return this;
    }

    @Override
    public ButtonsRecord value3(String value) {
        setLabel(value);
        return this;
    }

    @Override
    public ButtonsRecord value4(String value) {
        setActionType(value);
        return this;
    }

    @Override
    public ButtonsRecord value5(String value) {
        setActionData(value);
        return this;
    }

    @Override
    public ButtonsRecord value6(LocalDate value) {
        setDateCreated(value);
        return this;
    }

    @Override
    public ButtonsRecord value7(Integer value) {
        setPosition(value);
        return this;
    }

    @Override
    public ButtonsRecord values(Integer value1, Integer value2, String value3, String value4, String value5, LocalDate value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ButtonsRecord
     */
    public ButtonsRecord() {
        super(Buttons.BUTTONS);
    }

    /**
     * Create a detached, initialised ButtonsRecord
     */
    public ButtonsRecord(Integer buttonId, Integer menuId, String label, String actionType, String actionData, LocalDate dateCreated, Integer position) {
        super(Buttons.BUTTONS);

        setButtonId(buttonId);
        setMenuId(menuId);
        setLabel(label);
        setActionType(actionType);
        setActionData(actionData);
        setDateCreated(dateCreated);
        setPosition(position);
    }

    /**
     * Create a detached, initialised ButtonsRecord
     */
    public ButtonsRecord(by.sf.bot.jooq.tables.pojos.Buttons value) {
        super(Buttons.BUTTONS);

        if (value != null) {
            setButtonId(value.getButtonId());
            setMenuId(value.getMenuId());
            setLabel(value.getLabel());
            setActionType(value.getActionType());
            setActionData(value.getActionData());
            setDateCreated(value.getDateCreated());
            setPosition(value.getPosition());
        }
    }
}
