/*
 * This file is generated by jOOQ.
 */
package by.sf.bot.jooq.tables.records;


import by.sf.bot.jooq.tables.MainBotInfo;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MainBotInfoRecord extends UpdatableRecordImpl<MainBotInfoRecord> implements Record3<Integer, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>contact_center_bot.main_bot_info.id_info</code>.
     */
    public MainBotInfoRecord setIdInfo(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>contact_center_bot.main_bot_info.id_info</code>.
     */
    public Integer getIdInfo() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>contact_center_bot.main_bot_info.key</code>.
     */
    public MainBotInfoRecord setKey(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>contact_center_bot.main_bot_info.key</code>.
     */
    public String getKey() {
        return (String) get(1);
    }

    /**
     * Setter for <code>contact_center_bot.main_bot_info.value</code>.
     */
    public MainBotInfoRecord setValue(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>contact_center_bot.main_bot_info.value</code>.
     */
    public String getValue() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return MainBotInfo.MAIN_BOT_INFO.ID_INFO;
    }

    @Override
    public Field<String> field2() {
        return MainBotInfo.MAIN_BOT_INFO.KEY;
    }

    @Override
    public Field<String> field3() {
        return MainBotInfo.MAIN_BOT_INFO.VALUE;
    }

    @Override
    public Integer component1() {
        return getIdInfo();
    }

    @Override
    public String component2() {
        return getKey();
    }

    @Override
    public String component3() {
        return getValue();
    }

    @Override
    public Integer value1() {
        return getIdInfo();
    }

    @Override
    public String value2() {
        return getKey();
    }

    @Override
    public String value3() {
        return getValue();
    }

    @Override
    public MainBotInfoRecord value1(Integer value) {
        setIdInfo(value);
        return this;
    }

    @Override
    public MainBotInfoRecord value2(String value) {
        setKey(value);
        return this;
    }

    @Override
    public MainBotInfoRecord value3(String value) {
        setValue(value);
        return this;
    }

    @Override
    public MainBotInfoRecord values(Integer value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MainBotInfoRecord
     */
    public MainBotInfoRecord() {
        super(MainBotInfo.MAIN_BOT_INFO);
    }

    /**
     * Create a detached, initialised MainBotInfoRecord
     */
    public MainBotInfoRecord(Integer idInfo, String key, String value) {
        super(MainBotInfo.MAIN_BOT_INFO);

        setIdInfo(idInfo);
        setKey(key);
        setValue(value);
    }

    /**
     * Create a detached, initialised MainBotInfoRecord
     */
    public MainBotInfoRecord(by.sf.bot.jooq.tables.pojos.MainBotInfo value) {
        super(MainBotInfo.MAIN_BOT_INFO);

        if (value != null) {
            setIdInfo(value.getIdInfo());
            setKey(value.getKey());
            setValue(value.getValue());
        }
    }
}
