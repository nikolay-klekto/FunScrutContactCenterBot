/*
 * This file is generated by jOOQ.
 */
package by.sf.bot.jooq;


import by.sf.bot.jooq.tables.Buttons;
import by.sf.bot.jooq.tables.MainBotInfo;
import by.sf.bot.jooq.tables.MenuInfo;
import by.sf.bot.jooq.tables.Users;
import by.sf.bot.jooq.tables.records.ButtonsRecord;
import by.sf.bot.jooq.tables.records.MainBotInfoRecord;
import by.sf.bot.jooq.tables.records.MenuInfoRecord;
import by.sf.bot.jooq.tables.records.UsersRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * contact_center_bot.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ButtonsRecord> BUTTONS_PKEY = Internal.createUniqueKey(Buttons.BUTTONS, DSL.name("buttons_pkey"), new TableField[] { Buttons.BUTTONS.BUTTON_ID }, true);
    public static final UniqueKey<MainBotInfoRecord> MAIN_BOT_INFO_PKEY = Internal.createUniqueKey(MainBotInfo.MAIN_BOT_INFO, DSL.name("main_bot_info_pkey"), new TableField[] { MainBotInfo.MAIN_BOT_INFO.ID_INFO }, true);
    public static final UniqueKey<MenuInfoRecord> MENU_INFO_PKEY = Internal.createUniqueKey(MenuInfo.MENU_INFO, DSL.name("menu_info_pkey"), new TableField[] { MenuInfo.MENU_INFO.MENU_ID }, true);
    public static final UniqueKey<UsersRecord> USERS_PKEY = Internal.createUniqueKey(Users.USERS, DSL.name("users_pkey"), new TableField[] { Users.USERS.USER_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<MenuInfoRecord, MenuInfoRecord> MENU_INFO__MENU_INFO_PARENT_ID_FKEY = Internal.createForeignKey(MenuInfo.MENU_INFO, DSL.name("menu_info_parent_id_fkey"), new TableField[] { MenuInfo.MENU_INFO.PARENT_ID }, Keys.MENU_INFO_PKEY, new TableField[] { MenuInfo.MENU_INFO.MENU_ID }, true);
}
